{"ast":null,"code":"var _jsxFileName = \"C:\\\\Di-Bootcamp_Full_Stack\\\\Di-Bootcamp\\\\Week10\\\\Day_4\\\\Exercise\\\\ex1\\\\src\\\\components\\\\Color.js\";\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport Child from \"./Child\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Color extends React.Component {\n  constructor(props) {\n    super(props);\n    this.delete = () => {\n      this.setState({\n        show: false\n      });\n    };\n    this.state = {\n      favoriteColor: \"red\",\n      show: true\n    };\n  }\n  shouldComponentUpdate(nextProp, nextState) {\n    if (nextProp.favoriteColor !== this.props.favoriteColor) {\n      return false;\n    }\n    return true;\n  }\n  componentDidMount() {\n    this.interval = setInterval(() => this.setState({\n      favoriteColor: \"yellow\"\n    }), 2000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.favoriteColor !== this.state.favoriteColor) {\n      console.log(\"after update\");\n    }\n  }\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    console.log(\"in getSnapshotBeforeUpdate\");\n    return null;\n  }\n  render() {\n    let comp;\n    if (this.state.show) {\n      comp = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Child, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.delete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: comp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"My Favorite Color is \", this.state.favoriteColor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.setState(state => ({\n          favoriteColor: \"blue\"\n        })),\n        children: \"Blalal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// const Color = () => {\n//   const [favoriteColor, setColor] = useState(\"red\");\n//   const change = () => {\n//     setColor(\"Blue\");\n//   };\n//   // useEffect(() => {\n//   //   alert(\"useEffect reached\");\n//   //   setColor(\"yellow\");\n//   // }, []);\n//   return (\n//     <div>\n//       <div>My Favorite Color is {favoriteColor}</div>\n//       <button onClick={change} />\n//     </div>\n//   );\n// };\n\nexport default Color;","map":{"version":3,"names":["useEffect","useState","React","Child","jsxDEV","_jsxDEV","Color","Component","constructor","props","delete","setState","show","state","favoriteColor","shouldComponentUpdate","nextProp","nextState","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","componentDidUpdate","prevProps","prevState","console","log","getSnapshotBeforeUpdate","render","comp","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["C:/Di-Bootcamp_Full_Stack/Di-Bootcamp/Week10/Day_4/Exercise/ex1/src/components/Color.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\nimport Child from \"./Child\";\r\n\r\nclass Color extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { favoriteColor: \"red\", show: true };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProp, nextState) {\r\n    if (nextProp.favoriteColor !== this.props.favoriteColor) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  componentDidMount() {\r\n    this.interval = setInterval(\r\n      () => this.setState({ favoriteColor: \"yellow\" }),\r\n      2000\r\n    );\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.favoriteColor !== this.state.favoriteColor) {\r\n      console.log(\"after update\");\r\n    }\r\n  }\r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    console.log(\"in getSnapshotBeforeUpdate\");\r\n    return null;\r\n  }\r\n  delete = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  render() {\r\n    let comp;\r\n    if (this.state.show) {\r\n      comp = (\r\n        <div>\r\n          <Child />\r\n          <button onClick={this.delete}>Delete</button>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <header>{comp}</header>\r\n\r\n        <div>My Favorite Color is {this.state.favoriteColor}</div>\r\n        <button\r\n          onClick={() => this.setState((state) => ({ favoriteColor: \"blue\" }))}\r\n        >\r\n          Blalal\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const Color = () => {\r\n//   const [favoriteColor, setColor] = useState(\"red\");\r\n//   const change = () => {\r\n//     setColor(\"Blue\");\r\n//   };\r\n//   // useEffect(() => {\r\n//   //   alert(\"useEffect reached\");\r\n//   //   setColor(\"yellow\");\r\n//   // }, []);\r\n//   return (\r\n//     <div>\r\n//       <div>My Favorite Color is {favoriteColor}</div>\r\n//       <button onClick={change} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nexport default Color;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,KAAK,SAASJ,KAAK,CAACK,SAAS,CAAC;EAClCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KA4BfC,MAAM,GAAG,MAAM;MACb,IAAI,CAACC,QAAQ,CAAC;QAAEC,IAAI,EAAE;MAAM,CAAC,CAAC;IAChC,CAAC;IA7BC,IAAI,CAACC,KAAK,GAAG;MAAEC,aAAa,EAAE,KAAK;MAAEF,IAAI,EAAE;IAAK,CAAC;EACnD;EAEAG,qBAAqBA,CAACC,QAAQ,EAAEC,SAAS,EAAE;IACzC,IAAID,QAAQ,CAACF,aAAa,KAAK,IAAI,CAACL,KAAK,CAACK,aAAa,EAAE;MACvD,OAAO,KAAK;IACd;IACA,OAAO,IAAI;EACb;EACAI,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACC,QAAQ,GAAGC,WAAW,CACzB,MAAM,IAAI,CAACT,QAAQ,CAAC;MAAEG,aAAa,EAAE;IAAS,CAAC,CAAC,EAChD,IACF,CAAC;EACH;EACAO,oBAAoBA,CAAA,EAAG;IACrBC,aAAa,CAAC,IAAI,CAACH,QAAQ,CAAC;EAC9B;EACAI,kBAAkBA,CAACC,SAAS,EAAEC,SAAS,EAAE;IACvC,IAAIA,SAAS,CAACX,aAAa,KAAK,IAAI,CAACD,KAAK,CAACC,aAAa,EAAE;MACxDY,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC7B;EACF;EACAC,uBAAuBA,CAACJ,SAAS,EAAEC,SAAS,EAAE;IAC5CC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzC,OAAO,IAAI;EACb;EAKAE,MAAMA,CAAA,EAAG;IACP,IAAIC,IAAI;IACR,IAAI,IAAI,CAACjB,KAAK,CAACD,IAAI,EAAE;MACnBkB,IAAI,gBACFzB,OAAA;QAAA0B,QAAA,gBACE1B,OAAA,CAACF,KAAK;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACT9B,OAAA;UAAQ+B,OAAO,EAAE,IAAI,CAAC1B,MAAO;UAAAqB,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CACN;IACH;IACA,oBACE9B,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QAAA0B,QAAA,EAASD;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAEvB9B,OAAA;QAAA0B,QAAA,GAAK,uBAAqB,EAAC,IAAI,CAAClB,KAAK,CAACC,aAAa;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC1D9B,OAAA;QACE+B,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACzB,QAAQ,CAAEE,KAAK,KAAM;UAAEC,aAAa,EAAE;QAAO,CAAC,CAAC,CAAE;QAAAiB,QAAA,EACtE;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe7B,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}